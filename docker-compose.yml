version: '3.9'

services:
  db:
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-inisa-ufms}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-inisa-ufms}
      POSTGRES_DB: ${POSTGRES_DB:-inisa-db}
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - inisa_data:/var/lib/postgresql/data

  website:
    build:
      dockerfile: Dockerfile
      context: .
    restart: always
    environment:
      SECRET_PASSWORD: ${SECRET_PASSWORD:-8FYgqpsZZK2WQu0y1bDhwLtkU2VSIR47}
      DATABASE_URL: postgresql://${POSTGRES_USER:-inisa-ufms}:${POSTGRES_PASSWORD:-inisa-ufms}@db:5432/${POSTGRES_DB:-inisa-db}
    labels:
      - 'traefik.enable=true'
      # https
      - 'traefik.http.routers.inisa-website.rule=Host(`${DNS_NAME:-painel-sus.localhost}`)'
      - 'traefik.http.routers.inisa-website.entrypoints=websecure'
      - 'traefik.http.routers.inisa-website.tls=true'
      - 'traefik.http.routers.inisa-website.tls.certresolver=letsencrypt'
      - 'traefik.http.services.inisa-website.loadbalancer.server.port=80'
    depends_on:
      - db

  traefik:
    image: traefik:2.9
    restart: always
    command:
      # - '--log.level=DEBUG'
      # - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedByDefault=false'
      # The entrypoints we ant to expose
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      # Enable ACME (Let's Encrypt): automatic SSL.
      - '--certificatesresolvers.letsencrypt.acme.httpchallenge=true'
      - '--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web'
      - '--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-painel-sus.inisa@ufms.br}'
      - '--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json'
      # LetsEncrypt Staging Server - uncomment when testing
      # - '--certificatesresolvers.letsencrypt.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory'
    labels:
      # Redirect all HTTP traffic to HTTPS
      - 'traefik.http.routers.to-https.rule=HostRegexp(`{host:.+}`)'
      - 'traefik.http.routers.to-https.entrypoints=http'
      - 'traefik.http.routers.to-https.middlewares=to-https'
      - 'traefik.http.middlewares.to-https.redirectscheme.scheme=https'
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/etc/traefik/acme
    depends_on:
      - website

  website.dev:
    build:
      dockerfile: Dockerfile.dev
      context: .
    restart: always
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-inisa-ufms}:${POSTGRES_PASSWORD:-inisa-ufms}@db:5432/${POSTGRES_DB:-inisa-db}
    ports:
      - ${PORT:-3000}:80
    volumes:
      - .:/usr/src/app
      - /usr/src/app/.next
      - /usr/src/app/node_modules
    depends_on:
      - db

volumes:
  inisa_data:
