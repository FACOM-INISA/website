version: '3.9'

services:
  db:
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-inisa-ufms}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-inisa-ufms}
      POSTGRES_DB: ${POSTGRES_DB:-inisa-db}
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - inisa_data:/var/lib/postgresql/data

  website:
    build:
      dockerfile: Dockerfile
      context: .
    restart: always
    environment:
      SECRET_PASSWORD: ${SECRET_PASSWORD:-8FYgqpsZZK2WQu0y1bDhwLtkU2VSIR47}
      DATABASE_URL: postgresql://${POSTGRES_USER:-inisa-ufms}:${POSTGRES_PASSWORD:-inisa-ufms}@db:5432/${POSTGRES_DB:-inisa-db}
    ports:
      - 80
    depends_on:
      - db
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.website.rule=Host(`${DOMAIN:-painel-sus.localhost}`)'
      - 'traefik.http.routers.website.entrypoints=https'
      - 'traefik.http.routers.website.tls=true'
      - 'traefik.http.routers.website.tls.certresolver=letsencrypt'

  traefik:
    image: traefik:latest
    command:
      #- "--log.level=DEBUG"
      #- '--accesslog=true'
      #- '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.http.address=:80'
      - '--entrypoints.https.address=:443'
      - '--certificatesresolvers.letsencrypt.acme.tlschallenge=true'
      - '--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http'
      # - '--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory'
      - '--certificatesresolvers.letsencrypt.acme.email=${EMAIL}'
      - '--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json'
    ports:
      - '80:80'
      - '443:443'
      # - '8080:8080'
    volumes:
      - 'letsencrypt:/letsencrypt'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    labels:
      # Redirect all HTTP traffic to HTTPS
      - traefik.http.routers.to-https.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.to-https.entrypoints=http
      - traefik.http.routers.to-https.middlewares=to-https
      - traefik.http.middlewares.to-https.redirectscheme.scheme=https
    depends_on:
      - website

  caddy:
    image: caddy
    command: caddy reverse-proxy --from ${DOMAIN:-painel-sus.localhost} --to website:80
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - website

  website.dev:
    build:
      dockerfile: Dockerfile.dev
      context: .
    restart: always
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-inisa-ufms}:${POSTGRES_PASSWORD:-inisa-ufms}@db:5432/${POSTGRES_DB:-inisa-db}
    ports:
      - ${PORT:-3000}:80
    volumes:
      - .:/usr/src/app
      - /usr/src/app/.next
      - /usr/src/app/node_modules
    depends_on:
      - db

volumes:
  inisa_data:
  caddy_data:
  caddy_config:
  letsencrypt:
